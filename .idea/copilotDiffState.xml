<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="updatedContent" value="#  WiFi Password Harvester&#10;&#10;&lt;div align=&quot;center&quot;&gt;&#10;&#10;![Python](https://img.shields.io/badge/Python-3.7+-blue.svg)&#10;![Platform](https://img.shields.io/badge/Platform-Windows-lightgrey.svg)&#10;![License](https://img.shields.io/badge/License-MIT-green.svg)&#10;![Status](https://img.shields.io/badge/Status-Active-success.svg)&#10;&#10;**A stealthy Windows utility for extracting saved WiFi credentials and system information**&#10;&#10;[Features](#-features) • [Installation](#-installation) • [Usage](#-usage) • [How It Works](#-how-it-works) • [Disclaimer](#%EF%B8%8F-disclaimer)&#10;&#10;&lt;/div&gt;&#10;&#10;---&#10;&#10;##  Overview&#10;&#10;WiFi Password Harvester is a lightweight, **completely silent** Windows tool that extracts all saved WiFi passwords and system information without any visible interface. Perfect for penetration testing, security audits, or simply recovering your own forgotten WiFi passwords.&#10;&#10;### ✨ Features&#10;&#10;-  **WiFi Password Extraction** - Retrieves all saved WiFi SSIDs and passwords from Windows&#10;-  **System Information Collection** - Gathers hostname, IP address, and MAC address&#10;-  **Completely Silent** - Runs invisibly with zero console window flash&#10;- ⚡ **Lightning Fast** - Multi-threaded execution for 3-5x faster password extraction&#10;-  **Persistent Logging** - Appends to existing logs instead of overwriting&#10;-  **Portable** - Single standalone .exe, no installation required&#10;-  **No Dependencies** - Runs on any Windows system without Python&#10;&#10;##  Installation&#10;&#10;### Option 1: Download Pre-built Executable&#10;1. Download `wifi_pc_info.exe` from the [releases](../../releases) page&#10;2. Place it anywhere on your Windows system&#10;3. Run it - that's it!&#10;&#10;### Option 2: Build from Source&#10;```bash&#10;# Clone the repository&#10;git clone https://github.com/yourusername/wifi-password-harvester.git&#10;cd wifi-password-harvester&#10;&#10;# Install PyInstaller&#10;pip install pyinstaller&#10;&#10;# Build the executable&#10;pyinstaller --clean wifi_pc_info.spec&#10;```&#10;&#10;The compiled executable will be in the `dist/` folder.&#10;&#10;##  Usage&#10;&#10;### Basic Usage&#10;Simply double-click `wifi_pc_info.exe` or run it from command line:&#10;&#10;```cmd&#10;wifi_pc_info.exe&#10;```&#10;&#10;The program will:&#10;1. Run completely invisibly (no windows)&#10;2. Extract all saved WiFi passwords&#10;3. Collect system information&#10;4. Save everything to `data.txt` in the same directory&#10;&#10;### Output Example&#10;```&#10;-----------------PC Info-----------------&#10;&#10;PC Name: DESKTOP-ABC123&#10;IP Address: 192.168.1.100&#10;MAC Address: 00:1a:2b:3c:4d:5e&#10;&#10;-----------------WIFI Info-----------------&#10;&#10;Wi-Fi Name: HomeNetwork&#10;Password: MySecurePassword123&#10;====================&#10;Wi-Fi Name: Office_WiFi&#10;Password: CompanyPass456&#10;====================&#10;```&#10;&#10;##  How It Works&#10;&#10;### Technical Architecture&#10;&#10;```&#10;┌─────────────────────────────────────┐&#10;│     WiFi Password Harvester         │&#10;├─────────────────────────────────────┤&#10;│  1. System Info Collection          │&#10;│     └─ socket, uuid modules         │&#10;├─────────────────────────────────────┤&#10;│  2. WiFi Profile Enumeration        │&#10;│     └─ netsh wlan show profiles     │&#10;├─────────────────────────────────────┤&#10;│  3. Multi-threaded Password Extract │&#10;│     └─ ThreadPoolExecutor (10x)     │&#10;│     └─ netsh show profile key=clear │&#10;├─────────────────────────────────────┤&#10;│  4. Silent Subprocess Execution     │&#10;│     └─ CREATE_NO_WINDOW flag        │&#10;├─────────────────────────────────────┤&#10;│  5. Data Logging                    │&#10;│     └─ Append to data.txt           │&#10;└─────────────────────────────────────┘&#10;```&#10;&#10;### Key Technologies&#10;- **Windows WLAN API** - Via `netsh` command-line utility&#10;- **Threading** - `concurrent.futures.ThreadPoolExecutor` for parallel WiFi queries&#10;- **Silent Execution** - `CREATE_NO_WINDOW` flag prevents console flash&#10;- **PyInstaller** - Bundles Python script into standalone .exe with no console&#10;&#10;### Why It's Fast&#10;The tool uses multi-threading to query up to 10 WiFi profiles simultaneously instead of sequentially:&#10;- **Sequential**: 10 profiles × 1 sec = 10 seconds&#10;- **Parallel (10 threads)**: 10 profiles ÷ 10 = ~2 seconds ⚡&#10;&#10;## ️ Development&#10;&#10;### Project Structure&#10;```&#10;wifi-password-harvester/&#10;├── script.py              # Main Python source code&#10;├── wifi_pc_info.spec      # PyInstaller build configuration&#10;├── README.md              # This file&#10;├── LICENSE                # MIT License&#10;├── requirements.txt       # Python dependencies (none!)&#10;└── dist/&#10;    └── wifi_pc_info.exe   # Compiled executable&#10;```&#10;&#10;### Requirements&#10;- **Python 3.7+** (for building only)&#10;- **Windows OS** (target platform)&#10;- Standard library only - no external dependencies!&#10;&#10;### Building&#10;```bash&#10;# Standard build&#10;pyinstaller --onefile --noconsole --name wifi_pc_info script.py&#10;&#10;# Or use the spec file for customized build&#10;pyinstaller --clean wifi_pc_info.spec&#10;```&#10;&#10;##  Security Considerations&#10;&#10;### Antivirus Detection&#10;Due to the nature of password extraction and silent execution, some antivirus software may flag this tool as potentially unwanted. This is a **false positive** - the source code is open for inspection.&#10;&#10;To avoid detection:&#10;- Add an exception in Windows Defender&#10;- Code sign the executable (for professional use)&#10;- Compile with custom PyInstaller bootloader&#10;&#10;### Permissions&#10;- Requires standard user privileges (no admin needed)&#10;- Only extracts WiFi passwords that the current user has access to&#10;- Uses legitimate Windows `netsh` commands&#10;&#10;## ⚠️ Disclaimer&#10;&#10;**FOR EDUCATIONAL AND AUTHORIZED USE ONLY**&#10;&#10;This tool is designed for:&#10;- ✅ Security professionals conducting authorized penetration tests&#10;- ✅ Recovering your own forgotten WiFi passwords&#10;- ✅ Educational purposes and security research&#10;- ✅ IT administrators managing network credentials&#10;&#10;**DO NOT USE** for:&#10;- ❌ Unauthorized access to networks or systems&#10;- ❌ Stealing WiFi passwords without permission&#10;- ❌ Any illegal or malicious activities&#10;&#10;**The authors are not responsible for misuse of this tool. Always obtain explicit permission before testing on systems you don't own.**&#10;&#10;##  License&#10;&#10;This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.&#10;&#10;##  Contributing&#10;&#10;Contributions are welcome! Please feel free to submit a Pull Request.&#10;&#10;1. Fork the repository&#10;2. Create your feature branch (`git checkout -b feature/AmazingFeature`)&#10;3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)&#10;4. Push to the branch (`git push origin feature/AmazingFeature`)&#10;5. Open a Pull Request&#10;&#10;##  Contact&#10;&#10;Have questions or suggestions? Open an issue or reach out!&#10;&#10;---&#10;&#10;&lt;div align=&quot;center&quot;&gt;&#10;&#10;**⭐ Star this repo if you find it useful! ⭐**&#10;&#10;Made with ❤️ for the cybersecurity community&#10;&#10;&lt;/div&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>